name: Build and Upload app
on:
  release:
    types: [ created ]
jobs:
  build:
    runs-on: [macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Install certificate and provisioning profile
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          
          echo -n "${{ secrets.SIGNING_CERTIFICATE_P12_BASE64 }}" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "${{ secrets.PROVISIONING_PROFILE_BASE64 }}" | base64 --decode -o $PP_PATH
          
          security create-keychain -p "${{ secrets.SIGNING_CERTIFICATE_P12_PASSWORD }}" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "${{ secrets.SIGNING_CERTIFICATE_P12_PASSWORD }}" $KEYCHAIN_PATH
          
          security import $CERTIFICATE_PATH -P "${{ secrets.SIGNING_CERTIFICATE_P12_PASSWORD }}" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
          cd ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Create environment files
        run: |
          echo "class Env {
            Env._();
          
            static const sentryDsn = '${{ secrets.SENTRY_DSN }}';
            static const enableErrorTracking = true;
            static const enableAnalytics = true;
          }
          " > ./lib/env.dart
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" > ./ios/Runner/Config.xcconfig
          echo "${{ secrets.GOOGLE_SERVICE_INFO_PLIST_BASE64 }}" | base64 --decode > ./ios/Runner/GoogleService-Info.plist
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0'
          channel: 'stable'
      - run: flutter pub get
      - run: flutter build ipa --release --no-codesign
      - name: Sign app
        run: |
          xcrun xcodebuild -exportArchive -exportOptionsPlist ./ios/ExportOptions.plist -archivePath ./build/ios/archive/Runner.xcarchive -exportPath ./build/ios/ipa
      - name: Write Appstore API private key
        run: |
          mkdir -p ./private_keys
          echo -n "${{ secrets.APPSTORE_API_PRIVATE_KEY_BASE64 }}" | base64 --decode > ./private_keys/AuthKey_${{ secrets.APPSTORE_API_KEY_ID }}.p8
      - name: Upload app to Testflight
        run: |
          xcrun altool --upload-app --type ios -f ./build/ios/ipa/*.ipa --apiKey ${{ secrets.APPSTORE_API_KEY_ID }} --apiIssuer ${{ secrets.APPSTORE_ISSUER_ID }}
      - name: Clean up keychain and provisioning profile
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm -f ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
